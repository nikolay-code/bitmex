<Window x:Class="Bitmex.NET.MainApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bitmex.NET.MainApp"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"  
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Title="Bitmex.NET Main App" Height="Auto" Width="1129.023" Closing="Window_Closing" d:DesignHeight="675.145">
    <Window.Resources>
        <XmlDataProvider x:Key="TimeFrame" XPath="Items">
            <x:XData>
                <Items xmlns="">
                    <Item Header="1m" Value="1m"/>
                    <Item Header="3m" Value="3m"/>
                    <Item Header="1h" Value="1h"/>
                </Items>
            </x:XData>
        </XmlDataProvider>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <CollectionViewSource x:Key="SortedOrderBookL2Sourse" Source="{Binding OrderBookL2}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Price" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <Style x:Key="OrderBookItemContainerStyle" TargetType="{x:Type ListViewItem}"  >
            <Style.Triggers>
                <DataTrigger Binding="{Binding Direction}" Value="Buy">
                    <Setter Property="Foreground" Value="Green"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Direction}" Value="Sell">
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="0,0,2,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Header="Authorization" Visibility="{Binding IsNotConnected,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" 
					   Content="Key"></Label>
                <Label Grid.Row="1" Grid.Column="0" Content="Secret"></Label>

                <TextBox Grid.Row="0" Grid.Column="1"  Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></TextBox>
                <TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Secret, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"></TextBox>

                <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"  Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                    <Label Content="Is real?"></Label>
                    <CheckBox IsChecked="{Binding IsRealAccount}" VerticalAlignment="Center" Margin="0,0,25,0"/>
                    <Button Content="Connect" HorizontalAlignment="Stretch" MinWidth="200" Command="{Binding StartLoadSymbolsCmd}"/>
                </StackPanel>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="1"  Visibility="{Binding IsConnected,Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Grid.ColumnSpan="2" Margin="5,0,0,0">
            <Label Content="Time:"></Label>
            <Label Name="param_Time" Content="{Binding CurrentTime}"></Label>
            <Label Content="Main account:"></Label>
            <Label Name="param_Number" Content="{Binding AccountNumber}"></Label>
            <!--<Label Content="Account type:"></Label>
            <Label Name="param_AccType" Content="{Binding AccountType}"></Label>
            <Label Content="Wallet amount:"></Label>
            <Label Name="param_Amount" Content="{Binding Param_Amount}"></Label>
            <Label Content="Wallet margin balance:"></Label>
            <Label Name="param_Margin" Content="{Binding Param_Margin}"></Label>-->
            <Label Content="Ask:"></Label>
            <Label Name="param_Ask" Content="{Binding Param_Ask}" Foreground="Red"></Label>
            <Label Content="Bid:"></Label>
            <Label Name="param_Bid" Content="{Binding Param_Bid}" Foreground="Green"></Label>
            <!--<Label Content="State:"></Label>
            <Label Name="param_connection" Content="{Binding Param_Connection}"></Label>-->
        </StackPanel>
        <GroupBox Header="Trade (buy/sell)"  Grid.Row="2" Visibility="{Binding IsConnected,Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5" >
            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="41"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Grid.ColumnSpan="2">
                    <Label Content="Size"></Label>
                    <TextBox Text="{Binding Size}" VerticalAlignment="Center" Height="18" MinWidth="80"></TextBox>
                    <Label Content="Leverage (0-10):"></Label>
                    <TextBox Text="{Binding Leverage}" VerticalAlignment="Center" Height="18" MinWidth="30"/>
                    <Button Content="Calc Size" IsEnabled="{Binding IsAllowedToPlace}" HorizontalAlignment="Stretch" MinWidth="70" Height="18" Command="{Binding CalcSizeCmd}" Margin="10,0,5,0"/>
                    <Label Content="Delta For Limit orders" Visibility="Collapsed"></Label>
                    <TextBox Text="{Binding Delta}" VerticalAlignment="Center" Height="18" MinWidth="80" Visibility="Collapsed"></TextBox>
                    <Label Content="Count candles"></Label>
                    <TextBox Text="{Binding CandlesToCount}" VerticalAlignment="Center" Height="18" MinWidth="100"></TextBox>
                    <Label Content="Time Frame"></Label>
                    <ComboBox  ItemsSource="{Binding Source={StaticResource TimeFrame},XPath=*,Mode=OneTime}"
                               SelectedValue="{Binding TimeFrameValue,UpdateSourceTrigger=PropertyChanged}"
                               SelectedValuePath="@Value" 
                               DisplayMemberPath="@Header" HorizontalAlignment="Left" Height="20" VerticalAlignment="Center" Width="120"/>
                    <CheckBox Content="Only buy" Grid.Column="1" HorizontalAlignment="Left" Margin="10,4,0,0" VerticalAlignment="Top" IsChecked="{Binding isOnlyBuy}"/>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left"  Grid.ColumnSpan="2">
                    <Button Content="Buy Limit" IsEnabled="{Binding IsAllowedToPlace}" HorizontalAlignment="Stretch" MinWidth="150" Command="{Binding BuyCmd}" Height="20" VerticalAlignment="Top" Margin="5"/>
                    <Button Content="Sell Limit" IsEnabled="{Binding IsAllowedToPlace}" HorizontalAlignment="Stretch" MinWidth="150" Command="{Binding SellCmd}" Margin="5"/>
                    <Button Content="{Binding StartButtonName}" IsEnabled="{Binding StartButtonEnabled}"  HorizontalAlignment="Stretch"  Command="{Binding AutotradingCmd}" VerticalAlignment="Top" Width="163" Height="20" Margin="5"/>
                    <Button Content="Update History" HorizontalAlignment="Stretch" MinWidth="100" Command="{Binding UpdateHistoryCmd}" Margin="5"/>
                    <Button Content="Check Keys" HorizontalAlignment="Stretch" MinWidth="100" Command="{Binding CheckKeysCmd}" Margin="5" Visibility="Collapsed"/>
                    <Button Content="Load accounts" IsEnabled="{Binding StartAdditionalButtonEnabled}" HorizontalAlignment="Stretch" MinWidth="100" Command="{Binding ActivateAdditionalAccountsCmd}" Margin="5"/>
                </StackPanel>

            </Grid>
        </GroupBox>
        <TabControl Grid.Row="3" Visibility="{Binding IsConnected,Converter={StaticResource BooleanToVisibilityConverter}}" SelectedIndex="{Binding TabSelectedIndex}" Margin="5">
            <TabItem Header="Candles List">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="41"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Column="0" Grid.Row="1" ItemsSource="{Binding OrderBook10}" ItemContainerStyle="{StaticResource OrderBookItemContainerStyle}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn DisplayMemberBinding="{Binding Direction}" Header="Direction"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Size}" Header="Size"/>
                                <GridViewColumn DisplayMemberBinding="{Binding Price}" Header="Price"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView Grid.Column="1" Grid.Row="1" Name="CandlesView" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding CandlesList}" Margin="4,10,0,10">
                        <ListView.View>
                            <GridView>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Calculation Results">
                <ListView Name="AutoTradingView" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding ResultCalculationList}" Grid.Column="2" Margin="4,10,10,10" Grid.ColumnSpan="2">
                    <ListView.View>
                        <GridView>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Trade History" Width="112">
                <ListView Name="TradeHistory" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding TradeHistory}" Grid.Column="2" Margin="4,10,10,10" Grid.ColumnSpan="2">
                    <ListView.View>
                        <GridView>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Wallet History" Width="112">
                <ListView Name="WalletHistory" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding WalletHistory}" Grid.Column="2" Margin="4,10,10,10" Grid.ColumnSpan="2">
                    <ListView.View>
                        <GridView>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Accounts" Width="100">
                <ListView Name="Accounts" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding Accounts}" Grid.Column="0" Margin="4,10,10,10">
                    <ListView.View>
                        <GridView>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Monitoring" Width="100">
                <!-- <GroupBox Name="MonitorContainer" Header="Info">
                </GroupBox>-->
                <ScrollViewer>
                    <Grid Name="MainContainer"></Grid>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Strategy test" Width="100">
                <!--<ListView Name="Strategy test" local:DynamicBindingListView.GenerateColumnsGridView="True"  local:DynamicBindingListView.DateFormatString="MM/dd/yyyy" ItemsSource="{Binding Accounts}" Grid.Column="0" Margin="4,10,10,10">
                    <ListView.View>
                        <GridView>
                        </GridView>
                    </ListView.View>
                </ListView>
                <Grid>
                    <lvc:CartesianChart Series="{Binding SeriesCollection}" LegendLocation="Right" >
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="Sales" LabelFormatter="{Binding YFormatter}"></lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Title="Month" Labels="{Binding Labels}"></lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                    </lvc:CartesianChart>
                </Grid> 
                <lvc:CartesianChart Series="{Binding SeriesCollection}">
                    <lvc:CartesianChart.AxisX>
                        <lvc:Axis Labels="{Binding Labels}"/>
                    </lvc:CartesianChart.AxisX>
                </lvc:CartesianChart>-->

                <Grid Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="41"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" Grid.ColumnSpan="2">
                        <DatePicker SelectedDate="{Binding TesterStartDate, Mode=TwoWay}" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="2" VerticalAlignment="Top"/>
                        <DatePicker SelectedDate="{Binding TesterEndDate, Mode=TwoWay}" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="2" VerticalAlignment="Top"/>
                        <ComboBox  ItemsSource="{Binding Source={StaticResource TimeFrame},XPath=*,Mode=OneTime}"
                               SelectedValue="{Binding TesterTimeFrameValue,UpdateSourceTrigger=PropertyChanged}"
                               SelectedValuePath="@Value" 
                               DisplayMemberPath="@Header" HorizontalAlignment="Left" Height="20" VerticalAlignment="Center" Width="120" Margin="10,10,0,0" />
                        <Label Content="Count candles:" Margin="10,7,0,0"></Label>
                        <TextBox Text="{Binding TesterCandlesToCount}" VerticalAlignment="Center" Height="18" MinWidth="100" Margin="10,10,0,0"></TextBox>
                        <Label Content="Start depo:" Margin="10,7,0,0"></Label>
                        <TextBox Text="{Binding TesterStartDeposite}" VerticalAlignment="Center" Height="18" MinWidth="100" Margin="10,10,0,0"></TextBox>
                        <Label Content="Size:" Margin="10,7,0,0"></Label>
                        <TextBox Text="{Binding TesterSize}" VerticalAlignment="Center" Height="18" MinWidth="100" Margin="10,10,0,0"></TextBox>
                        <Button Content="{Binding TesterStartButtonName}" IsEnabled="{Binding TesterStartButtonEnabled}"  HorizontalAlignment="Stretch"  Command="{Binding TesterStartCmd}" VerticalAlignment="Top" Width="163" Height="24" Margin="10,10,0,0"/>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left"  Grid.ColumnSpan="2">
                        <Label Content="Message:" Margin="10,7,0,0"></Label>
                        <Label Content="" Name="Tester_message" Margin="10,7,0,0"></Label>
                    </StackPanel>
                    <lvc:CartesianChart Grid.Row="2" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Series="{Binding SeriesCollection}" >
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Labels="{Binding Labels}"/>
                        </lvc:CartesianChart.AxisX>
                    </lvc:CartesianChart>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
